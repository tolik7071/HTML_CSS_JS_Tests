/*
 * PObject.js: JavaScript объекты, которые позволяют сохранять данные между
 * сеансами работы с броузером и могут совместно использоваться веб страницами
 * одного каталога с одного и того же сервера.
 *
 * Данный модуль определяет конструктор PObject(), с помощью которого
 * создается хранимый объект.
 * Объекты PObject имеют два общедоступных метода. Метод save() сохраняет
 * текущие значения свойств объекта, а метод forget() удаляет сохраненные
 * значения свойств объекта. Чтобы определить хранимое свойство в объекте
 * PObject, достаточно просто установить свойство, как если бы это был
 * обычный JavaScript объект, и затем вызвать метод save(), чтобы сохранить
 * текущее состояние объекта. Вы не должны использовать имена "save"
 * и "forget" для определения своих свойств, точно так же вы не должны
 * использовать имена, начинающиеся с символа $. Объект PObject предполагает,
 * что значения всех свойств будут иметь строковый тип. Хотя при этом
 * допускается сохранять числовые и логические значения, но при получении
 * данных они будут преобразованы в строки.
 *
 * В процессе создания PObject хранимые данные загружаются и сохраняются
 * во вновь созданном объекте в виде обычных JavaScript свойств, и вы можете
 * использовать PObject точно так же, как обычный JavaScript объект.
 * Обратите внимание: к тому моменту, когда конструктор PObject() вернет
 * управление, хранимые свойства могут быть еще не готовы к использованию
 * и вам нужно подождать, пока в виде асинхронного вызова функции обработчика
 * события onload не будет получено извещение о готовности, * которое передается конструктору.
 *
 * Конструктор:
 *    PObject(name, defaults, onload):
 *
 * Аргументы:
 *
 *   name
 *        Имя, идентифицирующее хранимый объект. Одна страница может хранить
 *        данные в нескольких объектах PObject, и каждый объект PObject
 *        доступен для всех страниц из одного каталога, поэтому данное имя
 *        должно быть уникальным в пределах каталога. Если этот аргумент
 *        содержит значение null или отсутствует, будет использовано
 *        имя файла (а не каталога), содержащего веб страницу.
 *
 *   defaults
 *        Необязательный JavaScript объект. Если сохраненные ранее
 *        значения свойств хранимого объекта найдены не будут (что
 *        может произойти, когда объект PObject создается впервые)
 *        свойства данного объекта будут скопированы во вновь созданный
 *        объект PObject.
 *
 *    onload
 *        TODO
 *
 * Метод PObject.save(lifetimeInDays):
 * Сохраняет свойства объекта PObject и гарантирует, их хранение по меньшей
 * мере указанное число суток.
 *
 * Метод PObject.forget():
 * Удаляет свойства объекта PObject. После этого сохраняет "пустой" объект
 * PObject в хранилище, и если это возможно, определяет, что срок хранения
 * этого объекта уже истек.
 *
 * Примечания к реализации:
 *
 * Совместное использование объектов PObject:
 *
 * Данные, сохраняемые в объекте PObject из одной страницы, будут доступны
 * из других страниц, расположенных в том же каталоге на том же веб сервере.
 * При использовании реализации на базе cookie страницы, расположенные
 * во вложенных каталогах, смогут читать (но не писать) свойства объектов
 * PObject, созданных страницами из родительского каталога.
 * Различные броузеры сохраняют свои cookie файлы в разных хранилищах,
 * потому данные, сохраненные как cookie файлы в одном броузере, будут
 * недоступны в других броузерах.
 *
 * Сведения о безопасности:
 *
 * Данные, сохраняемые в виде объекта PObject, хранятся в незашифрованном
 * виде на жестком диске локальной системы. Приложения, работающие на этом
 * компьютере, могут прочитать эти данные, поэтому PObject не подходит
 * для хранения частной информации, такой как номера кредитных карт,
 * паролей или номеров банковских счетов.
 */
alert();
